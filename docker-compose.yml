version: "3"
services:
  authors:
    image: oharkusha/bff-authors-service:1.0
    container_name: bff-authors-service
    ports:
      - 8081:8081
    volumes:
      - /Users/oharkusha/Documents/workdir/logs:/tmp/logs
    networks:
      - mynet
    depends_on:
      zipkin:
        condition: service_started
  books:
    image: oharkusha/bff-books-service:1.0
    container_name: bff-books-service
    ports:
      - 8082:8082
    volumes:
      - /Users/oharkusha/Documents/workdir/logs:/tmp/logs
    networks:
      - mynet
    depends_on:
      zipkin:
        condition: service_started
  web-sockets:
    image: oharkusha/bff-web-sockets-service:1.0
    container_name: bff-web-sockets-service
    ports:
      - 8083:8083
    volumes:
      - /Users/oharkusha/Documents/workdir/logs:/tmp/logs
    networks:
      - mynet
  redis:
    image: redis:latest
    container_name: bff-redis
    ports:
      - 16379:6379
    networks:
      - mynet

  bff-frontend:
    image: oharkusha/bff-frontend:1.0
    container_name: bff-frontend-service
    ports:
       - 8084:8084
    networks:
      - mynet
    depends_on:
      zipkin:
        condition: service_started

  zipkin:
    image: openzipkin/zipkin
    container_name: bff-zipkin-service
    ports:
      - 9411:9411
    networks:
      - mynet

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
    ports:
      - 9200:9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - mynet

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    ports:
      - 5601:5601
    networks:
      - mynet

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.12.1
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/oharkusha/Documents/workdir/logs:/usr/share/filebeat/logs:ro
    networks:
      - mynet

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    links:
      - node-exporter:node-exporter
      - cadvisor:cadvisor
    networks:
      - mynet

  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - 9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
    networks:
      - mynet

  grafana:
    image: grafana/grafana:8.0.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    links:
      - prometheus:prometheus
    ports:
      - 3000:3000
    networks:
      - mynet
volumes:
  elasticsearch_data:
  grafana_data:
networks:
  mynet: